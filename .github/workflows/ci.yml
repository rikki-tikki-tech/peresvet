name: CD

on: push

jobs:
  test:
    runs-on: yaropolk
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🔎 The name of your branch is ${{ github.ref }}"

      - name: Check out repository code
        uses: actions/checkout@v3

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: 🧰 Install dependencies
        run: npm ci

      - name: 🧹 Check code style
        run: npm run lint

  build:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: 🧰 Install dependencies
        run: npm ci

      - name: 📦 Build project
        run: npm run build

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Docker image build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: utrobin/peresvet:latest
          context: .

  deploy:
    runs-on: self-hosted
    needs: build

    env:
      deploy_script: |
        # Clean old images
        docker container prune -f
        docker image prune -f

        # Start peresvet    
        if [[ -n "$(docker ps -a -q)" ]]; then docker stop $(docker ps -a -q); fi

        docker pull utrobin/peresvet 
        docker run -d --restart always -p 3000:3000 utrobin/peresvet

        echo Container updated successfully.

    steps:
      - name: 🚀 Deploy to server Peresvet via SSH action
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST_PERESVET }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script_stop: true
          script: ${{ env.deploy_script }}
